generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model file {
  id                         Int                          @id @default(autoincrement())
  filename                   String                       @db.VarChar(255)
  filepath                   String                       @db.VarChar(255)
  extracted_imgs             Int[]
  content                    String?
  size_mb                    Int?
  user_id                    String?                      @db.VarChar(255)
  created_at                 DateTime?                    @default(now()) @db.Timestamp(6)
  image                      image[]
  industry_challenge_mapping industry_challenge_mapping[]
  model                      model[]
}

model image {
  id          Int       @id @default(autoincrement())
  source_file Int
  model_name  String?   @db.VarChar(255)
  created_at  DateTime? @default(now()) @db.Timestamp(6)
  filename    String
  pathname    String
  file        file      @relation(fields: [source_file], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model industry_challenge_mapping {
  id                BigInt   @id @default(autoincrement())
  industry_name     String?
  discussion_topic  String?
  topic_description String?
  source_file_id    Int
  created_at        DateTime @default(now()) @db.Timestamptz(6)
  file              file     @relation(fields: [source_file_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "public_industry_challenge_mapping_source_file_id_fkey")
}

model model {
  id              Int       @id @default(autoincrement())
  model_name      String?   @db.VarChar(255)
  spec_file       Int?
  category        String?   @db.VarChar(255)
  description_1   String?
  description_2   String?
  description_3   String?
  associated_imgs Int[]
  user_id         String?   @db.VarChar(255)
  created_at      DateTime? @default(now()) @db.Timestamp(6)
  file            file?     @relation(fields: [spec_file], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
